/*
 * LIFF server API
 *
 * LIFF Server API.
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Linebotsdkx.Liff.Client.OpenAPIDateConverter;

namespace Linebotsdkx.Liff.Model
{
    /// <summary>
    /// LiffFeatures
    /// </summary>
    [DataContract(Name = "LiffFeatures")]
    public partial class LiffFeatures : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="LiffFeatures" /> class.
        /// </summary>
        /// <param name="ble">&#x60;true&#x60; if the LIFF app supports Bluetooth® Low Energy for LINE Things. &#x60;false&#x60; otherwise. .</param>
        /// <param name="qrCode">&#x60;true&#x60; to use the 2D code reader in the LIFF app. false otherwise. The default value is &#x60;false&#x60;.  (default to false).</param>
        public LiffFeatures(bool ble = default(bool), bool qrCode = false)
        {
            this.Ble = ble;
            this.QrCode = qrCode;
        }

        /// <summary>
        /// &#x60;true&#x60; if the LIFF app supports Bluetooth® Low Energy for LINE Things. &#x60;false&#x60; otherwise. 
        /// </summary>
        /// <value>&#x60;true&#x60; if the LIFF app supports Bluetooth® Low Energy for LINE Things. &#x60;false&#x60; otherwise. </value>
        [DataMember(Name = "ble", EmitDefaultValue = true)]
        public bool Ble { get; set; }

        /// <summary>
        /// &#x60;true&#x60; to use the 2D code reader in the LIFF app. false otherwise. The default value is &#x60;false&#x60;. 
        /// </summary>
        /// <value>&#x60;true&#x60; to use the 2D code reader in the LIFF app. false otherwise. The default value is &#x60;false&#x60;. </value>
        [DataMember(Name = "qrCode", EmitDefaultValue = true)]
        public bool QrCode { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class LiffFeatures {\n");
            sb.Append("  Ble: ").Append(Ble).Append("\n");
            sb.Append("  QrCode: ").Append(QrCode).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
