/*
 * LINE Messaging API(Insight)
 *
 * This document describes LINE Messaging API(Insight).
 *
 * The version of the OpenAPI document: 0.0.1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Linebotsdkx.Insight.Client;
using Linebotsdkx.Insight.Api;
// uncomment below to import models
//using Linebotsdkx.Insight.Model;

namespace Linebotsdkx.Insight.Test.Api
{
    /// <summary>
    ///  Class for testing InsightApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class InsightApiTests : IDisposable
    {
        private InsightApi instance;

        public InsightApiTests()
        {
            instance = new InsightApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of InsightApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' InsightApi
            //Assert.IsType<InsightApi>(instance);
        }

        /// <summary>
        /// Test GetFriendsDemographics
        /// </summary>
        [Fact]
        public void GetFriendsDemographicsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetFriendsDemographics();
            //Assert.IsType<GetFriendsDemographicsResponse>(response);
        }

        /// <summary>
        /// Test GetMessageEvent
        /// </summary>
        [Fact]
        public void GetMessageEventTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string requestId = null;
            //var response = instance.GetMessageEvent(requestId);
            //Assert.IsType<GetMessageEventResponse>(response);
        }

        /// <summary>
        /// Test GetNumberOfFollowers
        /// </summary>
        [Fact]
        public void GetNumberOfFollowersTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string? date = null;
            //var response = instance.GetNumberOfFollowers(date);
            //Assert.IsType<GetNumberOfFollowersResponse>(response);
        }

        /// <summary>
        /// Test GetNumberOfMessageDeliveries
        /// </summary>
        [Fact]
        public void GetNumberOfMessageDeliveriesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string date = null;
            //var response = instance.GetNumberOfMessageDeliveries(date);
            //Assert.IsType<GetNumberOfMessageDeliveriesResponse>(response);
        }

        /// <summary>
        /// Test GetStatisticsPerUnit
        /// </summary>
        [Fact]
        public void GetStatisticsPerUnitTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string customAggregationUnit = null;
            //string from = null;
            //string to = null;
            //var response = instance.GetStatisticsPerUnit(customAggregationUnit, from, to);
            //Assert.IsType<GetStatisticsPerUnitResponse>(response);
        }
    }
}
