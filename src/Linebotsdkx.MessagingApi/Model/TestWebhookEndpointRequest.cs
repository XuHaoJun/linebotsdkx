/*
 * LINE Messaging API
 *
 * This document describes LINE Messaging API.
 *
 * The version of the OpenAPI document: 0.0.1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Linebotsdkx.MessagingApi.Client.OpenAPIDateConverter;

namespace Linebotsdkx.MessagingApi.Model
{
    /// <summary>
    /// TestWebhookEndpointRequest
    /// </summary>
    [DataContract(Name = "TestWebhookEndpointRequest")]
    public partial class TestWebhookEndpointRequest : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="TestWebhookEndpointRequest" /> class.
        /// </summary>
        /// <param name="endpoint">A webhook URL to be validated..</param>
        public TestWebhookEndpointRequest(string endpoint = default(string))
        {
            this.Endpoint = endpoint;
        }

        /// <summary>
        /// A webhook URL to be validated.
        /// </summary>
        /// <value>A webhook URL to be validated.</value>
        [DataMember(Name = "endpoint", EmitDefaultValue = false)]
        public string Endpoint { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class TestWebhookEndpointRequest {\n");
            sb.Append("  Endpoint: ").Append(Endpoint).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            // Endpoint (string) maxLength
            if (this.Endpoint != null && this.Endpoint.Length > 500)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for Endpoint, length must be less than 500.", new [] { "Endpoint" });
            }

            // Endpoint (string) minLength
            if (this.Endpoint != null && this.Endpoint.Length < 0)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for Endpoint, length must be greater than 0.", new [] { "Endpoint" });
            }

            yield break;
        }
    }

}
