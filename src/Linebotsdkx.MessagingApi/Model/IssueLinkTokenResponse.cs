/*
 * LINE Messaging API
 *
 * This document describes LINE Messaging API.
 *
 * The version of the OpenAPI document: 0.0.1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Linebotsdkx.MessagingApi.Client.OpenAPIDateConverter;

namespace Linebotsdkx.MessagingApi.Model
{
    /// <summary>
    /// IssueLinkTokenResponse
    /// </summary>
    [DataContract(Name = "IssueLinkTokenResponse")]
    public partial class IssueLinkTokenResponse : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="IssueLinkTokenResponse" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected IssueLinkTokenResponse() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="IssueLinkTokenResponse" /> class.
        /// </summary>
        /// <param name="linkToken">Link token. Link tokens are valid for 10 minutes and can only be used once.   (required).</param>
        public IssueLinkTokenResponse(string linkToken = default(string))
        {
            // to ensure "linkToken" is required (not null)
            if (linkToken == null)
            {
                throw new ArgumentNullException("linkToken is a required property for IssueLinkTokenResponse and cannot be null");
            }
            this.LinkToken = linkToken;
        }

        /// <summary>
        /// Link token. Link tokens are valid for 10 minutes and can only be used once.  
        /// </summary>
        /// <value>Link token. Link tokens are valid for 10 minutes and can only be used once.  </value>
        [DataMember(Name = "linkToken", IsRequired = true, EmitDefaultValue = true)]
        public string LinkToken { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class IssueLinkTokenResponse {\n");
            sb.Append("  LinkToken: ").Append(LinkToken).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
