/*
 * LINE Messaging API
 *
 * This document describes LINE Messaging API.
 *
 * The version of the OpenAPI document: 0.0.1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Linebotsdkx.MessagingApi.Client.OpenAPIDateConverter;

namespace Linebotsdkx.MessagingApi.Model
{
    /// <summary>
    /// RichMenuAliasResponse
    /// </summary>
    [DataContract(Name = "RichMenuAliasResponse")]
    public partial class RichMenuAliasResponse : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="RichMenuAliasResponse" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected RichMenuAliasResponse() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="RichMenuAliasResponse" /> class.
        /// </summary>
        /// <param name="richMenuAliasId">Rich menu alias ID. (required).</param>
        /// <param name="richMenuId">The rich menu ID associated with the rich menu alias. (required).</param>
        public RichMenuAliasResponse(string richMenuAliasId = default(string), string richMenuId = default(string))
        {
            // to ensure "richMenuAliasId" is required (not null)
            if (richMenuAliasId == null)
            {
                throw new ArgumentNullException("richMenuAliasId is a required property for RichMenuAliasResponse and cannot be null");
            }
            this.RichMenuAliasId = richMenuAliasId;
            // to ensure "richMenuId" is required (not null)
            if (richMenuId == null)
            {
                throw new ArgumentNullException("richMenuId is a required property for RichMenuAliasResponse and cannot be null");
            }
            this.RichMenuId = richMenuId;
        }

        /// <summary>
        /// Rich menu alias ID.
        /// </summary>
        /// <value>Rich menu alias ID.</value>
        [DataMember(Name = "richMenuAliasId", IsRequired = true, EmitDefaultValue = true)]
        public string RichMenuAliasId { get; set; }

        /// <summary>
        /// The rich menu ID associated with the rich menu alias.
        /// </summary>
        /// <value>The rich menu ID associated with the rich menu alias.</value>
        [DataMember(Name = "richMenuId", IsRequired = true, EmitDefaultValue = true)]
        public string RichMenuId { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class RichMenuAliasResponse {\n");
            sb.Append("  RichMenuAliasId: ").Append(RichMenuAliasId).Append("\n");
            sb.Append("  RichMenuId: ").Append(RichMenuId).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
