/*
 * LINE Messaging API(Insight)
 *
 * This document describes LINE Messaging API(Insight).
 *
 * The version of the OpenAPI document: 0.0.1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Linebotsdkx.Insight.Model;
using Linebotsdkx.Insight.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Linebotsdkx.Insight.Test.Model
{
    /// <summary>
    ///  Class for testing GetMessageEventResponseMessage
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class GetMessageEventResponseMessageTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for GetMessageEventResponseMessage
        //private GetMessageEventResponseMessage instance;

        public GetMessageEventResponseMessageTests()
        {
            // TODO uncomment below to create an instance of GetMessageEventResponseMessage
            //instance = new GetMessageEventResponseMessage();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of GetMessageEventResponseMessage
        /// </summary>
        [Fact]
        public void GetMessageEventResponseMessageInstanceTest()
        {
            // TODO uncomment below to test "IsType" GetMessageEventResponseMessage
            //Assert.IsType<GetMessageEventResponseMessage>(instance);
        }

        /// <summary>
        /// Test the property 'Seq'
        /// </summary>
        [Fact]
        public void SeqTest()
        {
            // TODO unit test for the property 'Seq'
        }

        /// <summary>
        /// Test the property 'Impression'
        /// </summary>
        [Fact]
        public void ImpressionTest()
        {
            // TODO unit test for the property 'Impression'
        }

        /// <summary>
        /// Test the property 'MediaPlayed'
        /// </summary>
        [Fact]
        public void MediaPlayedTest()
        {
            // TODO unit test for the property 'MediaPlayed'
        }

        /// <summary>
        /// Test the property 'MediaPlayed25Percent'
        /// </summary>
        [Fact]
        public void MediaPlayed25PercentTest()
        {
            // TODO unit test for the property 'MediaPlayed25Percent'
        }

        /// <summary>
        /// Test the property 'MediaPlayed50Percent'
        /// </summary>
        [Fact]
        public void MediaPlayed50PercentTest()
        {
            // TODO unit test for the property 'MediaPlayed50Percent'
        }

        /// <summary>
        /// Test the property 'MediaPlayed75Percent'
        /// </summary>
        [Fact]
        public void MediaPlayed75PercentTest()
        {
            // TODO unit test for the property 'MediaPlayed75Percent'
        }

        /// <summary>
        /// Test the property 'MediaPlayed100Percent'
        /// </summary>
        [Fact]
        public void MediaPlayed100PercentTest()
        {
            // TODO unit test for the property 'MediaPlayed100Percent'
        }

        /// <summary>
        /// Test the property 'UniqueMediaPlayed'
        /// </summary>
        [Fact]
        public void UniqueMediaPlayedTest()
        {
            // TODO unit test for the property 'UniqueMediaPlayed'
        }

        /// <summary>
        /// Test the property 'UniqueMediaPlayed25Percent'
        /// </summary>
        [Fact]
        public void UniqueMediaPlayed25PercentTest()
        {
            // TODO unit test for the property 'UniqueMediaPlayed25Percent'
        }

        /// <summary>
        /// Test the property 'UniqueMediaPlayed50Percent'
        /// </summary>
        [Fact]
        public void UniqueMediaPlayed50PercentTest()
        {
            // TODO unit test for the property 'UniqueMediaPlayed50Percent'
        }

        /// <summary>
        /// Test the property 'UniqueMediaPlayed75Percent'
        /// </summary>
        [Fact]
        public void UniqueMediaPlayed75PercentTest()
        {
            // TODO unit test for the property 'UniqueMediaPlayed75Percent'
        }

        /// <summary>
        /// Test the property 'UniqueMediaPlayed100Percent'
        /// </summary>
        [Fact]
        public void UniqueMediaPlayed100PercentTest()
        {
            // TODO unit test for the property 'UniqueMediaPlayed100Percent'
        }
    }
}
