/*
 * LINE Messaging API
 *
 * This document describes LINE Messaging API.
 *
 * The version of the OpenAPI document: 0.0.1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Linebotsdkx.MessagingApi.Client.OpenAPIDateConverter;

namespace Linebotsdkx.MessagingApi.Model
{
    /// <summary>
    /// ImagemapVideo
    /// </summary>
    [DataContract(Name = "ImagemapVideo")]
    public partial class ImagemapVideo : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ImagemapVideo" /> class.
        /// </summary>
        /// <param name="originalContentUrl">originalContentUrl.</param>
        /// <param name="previewImageUrl">previewImageUrl.</param>
        /// <param name="area">area.</param>
        /// <param name="externalLink">externalLink.</param>
        public ImagemapVideo(string originalContentUrl = default(string), string previewImageUrl = default(string), ImagemapArea area = default(ImagemapArea), ImagemapExternalLink externalLink = default(ImagemapExternalLink))
        {
            this.OriginalContentUrl = originalContentUrl;
            this.PreviewImageUrl = previewImageUrl;
            this.Area = area;
            this.ExternalLink = externalLink;
        }

        /// <summary>
        /// Gets or Sets OriginalContentUrl
        /// </summary>
        [DataMember(Name = "originalContentUrl", EmitDefaultValue = false)]
        public string OriginalContentUrl { get; set; }

        /// <summary>
        /// Gets or Sets PreviewImageUrl
        /// </summary>
        [DataMember(Name = "previewImageUrl", EmitDefaultValue = false)]
        public string PreviewImageUrl { get; set; }

        /// <summary>
        /// Gets or Sets Area
        /// </summary>
        [DataMember(Name = "area", EmitDefaultValue = false)]
        public ImagemapArea Area { get; set; }

        /// <summary>
        /// Gets or Sets ExternalLink
        /// </summary>
        [DataMember(Name = "externalLink", EmitDefaultValue = false)]
        public ImagemapExternalLink ExternalLink { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ImagemapVideo {\n");
            sb.Append("  OriginalContentUrl: ").Append(OriginalContentUrl).Append("\n");
            sb.Append("  PreviewImageUrl: ").Append(PreviewImageUrl).Append("\n");
            sb.Append("  Area: ").Append(Area).Append("\n");
            sb.Append("  ExternalLink: ").Append(ExternalLink).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
