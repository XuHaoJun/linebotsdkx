/*
 * LIFF server API
 *
 * LIFF Server API.
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Linebotsdkx.Liff.Client;
using Linebotsdkx.Liff.Api;
// uncomment below to import models
//using Linebotsdkx.Liff.Model;

namespace Linebotsdkx.Liff.Test.Api
{
    /// <summary>
    ///  Class for testing LiffApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class LiffApiTests : IDisposable
    {
        private LiffApi instance;

        public LiffApiTests()
        {
            instance = new LiffApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of LiffApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' LiffApi
            //Assert.IsType<LiffApi>(instance);
        }

        /// <summary>
        /// Test AddLIFFApp
        /// </summary>
        [Fact]
        public void AddLIFFAppTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //AddLiffAppRequest addLiffAppRequest = null;
            //var response = instance.AddLIFFApp(addLiffAppRequest);
            //Assert.IsType<AddLiffAppResponse>(response);
        }

        /// <summary>
        /// Test DeleteLIFFApp
        /// </summary>
        [Fact]
        public void DeleteLIFFAppTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string liffId = null;
            //instance.DeleteLIFFApp(liffId);
        }

        /// <summary>
        /// Test GetAllLIFFApps
        /// </summary>
        [Fact]
        public void GetAllLIFFAppsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetAllLIFFApps();
            //Assert.IsType<GetAllLiffAppsResponse>(response);
        }

        /// <summary>
        /// Test UpdateLIFFApp
        /// </summary>
        [Fact]
        public void UpdateLIFFAppTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string liffId = null;
            //UpdateLiffAppRequest updateLiffAppRequest = null;
            //instance.UpdateLIFFApp(liffId, updateLiffAppRequest);
        }
    }
}
