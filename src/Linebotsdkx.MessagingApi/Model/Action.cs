/*
 * LINE Messaging API
 *
 * This document describes LINE Messaging API.
 *
 * The version of the OpenAPI document: 0.0.1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using JsonSubTypes;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Linebotsdkx.MessagingApi.Client.OpenAPIDateConverter;

namespace Linebotsdkx.MessagingApi.Model
{
    /// <summary>
    /// Action
    /// </summary>
    [DataContract(Name = "Action")]
    [JsonConverter(typeof(JsonSubtypes), "Type")]
    [JsonSubtypes.KnownSubType(typeof(CameraAction), "camera")]
    [JsonSubtypes.KnownSubType(typeof(CameraRollAction), "cameraRoll")]
    [JsonSubtypes.KnownSubType(typeof(ClipboardAction), "clipboard")]
    [JsonSubtypes.KnownSubType(typeof(DatetimePickerAction), "datetimepicker")]
    [JsonSubtypes.KnownSubType(typeof(LocationAction), "location")]
    [JsonSubtypes.KnownSubType(typeof(MessageAction), "message")]
    [JsonSubtypes.KnownSubType(typeof(PostbackAction), "postback")]
    [JsonSubtypes.KnownSubType(typeof(RichMenuSwitchAction), "richmenuswitch")]
    [JsonSubtypes.KnownSubType(typeof(URIAction), "uri")]
    public partial class Action : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="Action" /> class.
        /// </summary>
        /// <param name="type">Type of action.</param>
        /// <param name="label">Label for the action..</param>
        public Action(string type = default(string), string label = default(string))
        {
            this.Type = type;
            this.Label = label;
        }

        /// <summary>
        /// Type of action
        /// </summary>
        /// <value>Type of action</value>
        [DataMember(Name = "type", EmitDefaultValue = false)]
        public string Type { get; set; }

        /// <summary>
        /// Label for the action.
        /// </summary>
        /// <value>Label for the action.</value>
        [DataMember(Name = "label", EmitDefaultValue = false)]
        public string Label { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class Action {\n");
            sb.Append("  Type: ").Append(Type).Append("\n");
            sb.Append("  Label: ").Append(Label).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            return this.BaseValidate(validationContext);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        protected IEnumerable<ValidationResult> BaseValidate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
