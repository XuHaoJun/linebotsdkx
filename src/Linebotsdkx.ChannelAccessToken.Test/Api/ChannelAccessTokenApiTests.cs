/*
 * Channel Access Token API
 *
 * This document describes Channel Access Token API.
 *
 * The version of the OpenAPI document: 0.0.1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Linebotsdkx.ChannelAccessToken.Client;
using Linebotsdkx.ChannelAccessToken.Api;
// uncomment below to import models
//using Linebotsdkx.ChannelAccessToken.Model;

namespace Linebotsdkx.ChannelAccessToken.Test.Api
{
    /// <summary>
    ///  Class for testing ChannelAccessTokenApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class ChannelAccessTokenApiTests : IDisposable
    {
        private ChannelAccessTokenApi instance;

        public ChannelAccessTokenApiTests()
        {
            instance = new ChannelAccessTokenApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of ChannelAccessTokenApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' ChannelAccessTokenApi
            //Assert.IsType<ChannelAccessTokenApi>(instance);
        }

        /// <summary>
        /// Test GetsAllValidChannelAccessTokenKeyIds
        /// </summary>
        [Fact]
        public void GetsAllValidChannelAccessTokenKeyIdsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string clientAssertionType = null;
            //string clientAssertion = null;
            //var response = instance.GetsAllValidChannelAccessTokenKeyIds(clientAssertionType, clientAssertion);
            //Assert.IsType<ChannelAccessTokenKeyIdsResponse>(response);
        }

        /// <summary>
        /// Test IssueChannelToken
        /// </summary>
        [Fact]
        public void IssueChannelTokenTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string grantType = null;
            //string clientId = null;
            //string clientSecret = null;
            //var response = instance.IssueChannelToken(grantType, clientId, clientSecret);
            //Assert.IsType<IssueShortLivedChannelAccessTokenResponse>(response);
        }

        /// <summary>
        /// Test IssueChannelTokenByJWT
        /// </summary>
        [Fact]
        public void IssueChannelTokenByJWTTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string grantType = null;
            //string clientAssertionType = null;
            //string clientAssertion = null;
            //var response = instance.IssueChannelTokenByJWT(grantType, clientAssertionType, clientAssertion);
            //Assert.IsType<IssueChannelAccessTokenResponse>(response);
        }

        /// <summary>
        /// Test IssueStatelessChannelToken
        /// </summary>
        [Fact]
        public void IssueStatelessChannelTokenTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string? grantType = null;
            //string? clientAssertionType = null;
            //string? clientAssertion = null;
            //string? clientId = null;
            //string? clientSecret = null;
            //var response = instance.IssueStatelessChannelToken(grantType, clientAssertionType, clientAssertion, clientId, clientSecret);
            //Assert.IsType<IssueStatelessChannelAccessTokenResponse>(response);
        }

        /// <summary>
        /// Test RevokeChannelToken
        /// </summary>
        [Fact]
        public void RevokeChannelTokenTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accessToken = null;
            //instance.RevokeChannelToken(accessToken);
        }

        /// <summary>
        /// Test RevokeChannelTokenByJWT
        /// </summary>
        [Fact]
        public void RevokeChannelTokenByJWTTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string clientId = null;
            //string clientSecret = null;
            //string accessToken = null;
            //instance.RevokeChannelTokenByJWT(clientId, clientSecret, accessToken);
        }

        /// <summary>
        /// Test VerifyChannelToken
        /// </summary>
        [Fact]
        public void VerifyChannelTokenTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accessToken = null;
            //var response = instance.VerifyChannelToken(accessToken);
            //Assert.IsType<VerifyChannelAccessTokenResponse>(response);
        }

        /// <summary>
        /// Test VerifyChannelTokenByJWT
        /// </summary>
        [Fact]
        public void VerifyChannelTokenByJWTTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accessToken = null;
            //var response = instance.VerifyChannelTokenByJWT(accessToken);
            //Assert.IsType<VerifyChannelAccessTokenResponse>(response);
        }
    }
}
