/*
 * LINE Messaging API
 *
 * This document describes LINE Messaging API.
 *
 * The version of the OpenAPI document: 0.0.1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Linebotsdkx.ManageAudience.Client.OpenAPIDateConverter;

namespace Linebotsdkx.ManageAudience.Model
{
    /// <summary>
    /// Get audience data
    /// </summary>
    [DataContract(Name = "GetAudienceDataResponse")]
    public partial class GetAudienceDataResponse : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="GetAudienceDataResponse" /> class.
        /// </summary>
        /// <param name="audienceGroup">audienceGroup.</param>
        /// <param name="jobs">An array of jobs. This array is used to keep track of each attempt to add new user IDs or IFAs to an audience for uploading user IDs. Empty array is returned for any other type of audience. Max: 50 .</param>
        public GetAudienceDataResponse(AudienceGroup audienceGroup = default(AudienceGroup), List<AudienceGroupJob> jobs = default(List<AudienceGroupJob>))
        {
            this.AudienceGroup = audienceGroup;
            this.Jobs = jobs;
        }

        /// <summary>
        /// Gets or Sets AudienceGroup
        /// </summary>
        [DataMember(Name = "audienceGroup", EmitDefaultValue = false)]
        public AudienceGroup AudienceGroup { get; set; }

        /// <summary>
        /// An array of jobs. This array is used to keep track of each attempt to add new user IDs or IFAs to an audience for uploading user IDs. Empty array is returned for any other type of audience. Max: 50 
        /// </summary>
        /// <value>An array of jobs. This array is used to keep track of each attempt to add new user IDs or IFAs to an audience for uploading user IDs. Empty array is returned for any other type of audience. Max: 50 </value>
        [DataMember(Name = "jobs", EmitDefaultValue = false)]
        public List<AudienceGroupJob> Jobs { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class GetAudienceDataResponse {\n");
            sb.Append("  AudienceGroup: ").Append(AudienceGroup).Append("\n");
            sb.Append("  Jobs: ").Append(Jobs).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
